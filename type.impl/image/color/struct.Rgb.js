(function() {var type_impls = {
"grid_forge":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Rgb%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/image/color.rs.html#402-414\">source</a><a href=\"#impl-Clone-for-Rgb%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"image/color/struct.Rgb.html\" title=\"struct image::color::Rgb\">Rgb</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/image/color.rs.html#402-414\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"image/color/struct.Rgb.html\" title=\"struct image::color::Rgb\">Rgb</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.79.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.79.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","grid_forge::vis::DefaultVisPixel"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Rgb%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/image/color.rs.html#402-414\">source</a><a href=\"#impl-Debug-for-Rgb%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"image/color/struct.Rgb.html\" title=\"struct image::color::Rgb\">Rgb</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/image/color.rs.html#402-414\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.79.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","grid_forge::vis::DefaultVisPixel"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%5BT;+3%5D%3E-for-Rgb%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/image/color.rs.html#402-414\">source</a><a href=\"#impl-From%3C%5BT;+3%5D%3E-for-Rgb%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.array.html\">[T; 3]</a>&gt; for <a class=\"struct\" href=\"image/color/struct.Rgb.html\" title=\"struct image::color::Rgb\">Rgb</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/image/color.rs.html#402-414\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(c: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.array.html\">[T; 3]</a>) -&gt; <a class=\"struct\" href=\"image/color/struct.Rgb.html\" title=\"struct image::color::Rgb\">Rgb</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<[T; 3]>","grid_forge::vis::DefaultVisPixel"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-Rgb%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/image/color.rs.html#402-414\">source</a><a href=\"#impl-Hash-for-Rgb%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for <a class=\"struct\" href=\"image/color/struct.Rgb.html\" title=\"struct image::color::Rgb\">Rgb</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/image/color.rs.html#402-414\">source</a><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;__H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.reference.html\">&amp;mut __H</a>)<div class=\"where\">where\n    __H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,</div></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/1.79.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.79.0/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/hash/mod.rs.html#238-240\">source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.slice.html\">[Self]</a>, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/1.79.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.79.0/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","grid_forge::vis::DefaultVisPixel"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Index%3Cusize%3E-for-Rgb%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/image/color.rs.html#402-414\">source</a><a href=\"#impl-Index%3Cusize%3E-for-Rgb%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/index/trait.Index.html\" title=\"trait core::ops::index::Index\">Index</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.usize.html\">usize</a>&gt; for <a class=\"struct\" href=\"image/color/struct.Rgb.html\" title=\"struct image::color::Rgb\">Rgb</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.79.0/core/ops/index/trait.Index.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = T</h4></section></summary><div class='docblock'>The returned type after indexing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/image/color.rs.html#402-414\">source</a><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/ops/index/trait.Index.html#tymethod.index\" class=\"fn\">index</a>(&amp;self, _index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.reference.html\">&amp;T</a></h4></section></summary><div class='docblock'>Performs the indexing (<code>container[index]</code>) operation. <a href=\"https://doc.rust-lang.org/1.79.0/core/ops/index/trait.Index.html#tymethod.index\">Read more</a></div></details></div></details>","Index<usize>","grid_forge::vis::DefaultVisPixel"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IndexMut%3Cusize%3E-for-Rgb%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/image/color.rs.html#402-414\">source</a><a href=\"#impl-IndexMut%3Cusize%3E-for-Rgb%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/index/trait.IndexMut.html\" title=\"trait core::ops::index::IndexMut\">IndexMut</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.usize.html\">usize</a>&gt; for <a class=\"struct\" href=\"image/color/struct.Rgb.html\" title=\"struct image::color::Rgb\">Rgb</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.index_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/image/color.rs.html#402-414\">source</a><a href=\"#method.index_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/ops/index/trait.IndexMut.html#tymethod.index_mut\" class=\"fn\">index_mut</a>(&amp;mut self, _index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.reference.html\">&amp;mut T</a></h4></section></summary><div class='docblock'>Performs the mutable indexing (<code>container[index]</code>) operation. <a href=\"https://doc.rust-lang.org/1.79.0/core/ops/index/trait.IndexMut.html#tymethod.index_mut\">Read more</a></div></details></div></details>","IndexMut<usize>","grid_forge::vis::DefaultVisPixel"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-Rgb%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/image/color.rs.html#402-414\">source</a><a href=\"#impl-PartialEq-for-Rgb%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"image/color/struct.Rgb.html\" title=\"struct image::color::Rgb\">Rgb</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/image/color.rs.html#402-414\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"image/color/struct.Rgb.html\" title=\"struct image::color::Rgb\">Rgb</a>&lt;T&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/cmp.rs.html#263\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","grid_forge::vis::DefaultVisPixel"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pixel-for-Rgb%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/image/color.rs.html#402-414\">source</a><a href=\"#impl-Pixel-for-Rgb%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"image/traits/trait.Pixel.html\" title=\"trait image::traits::Pixel\">Pixel</a> for <a class=\"struct\" href=\"image/color/struct.Rgb.html\" title=\"struct image::color::Rgb\">Rgb</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"image/traits/trait.Primitive.html\" title=\"trait image::traits::Primitive\">Primitive</a> + Enlargeable,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Subpixel\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Subpixel\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"image/traits/trait.Pixel.html#associatedtype.Subpixel\" class=\"associatedtype\">Subpixel</a> = T</h4></section></summary><div class='docblock'>The scalar type that is used to store each channel in this pixel.</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.CHANNEL_COUNT\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/image/color.rs.html#402-414\">source</a><a href=\"#associatedconstant.CHANNEL_COUNT\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"image/traits/trait.Pixel.html#associatedconstant.CHANNEL_COUNT\" class=\"constant\">CHANNEL_COUNT</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a> = 3u8</h4></section></summary><div class='docblock'>The number of channels of this pixel type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.channels\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/image/color.rs.html#402-414\">source</a><a href=\"#method.channels\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"image/traits/trait.Pixel.html#tymethod.channels\" class=\"fn\">channels</a>(&amp;self) -&gt; &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.slice.html\">[T]</a></h4></section></summary><div class='docblock'>Returns the components as a slice.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.channels_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/image/color.rs.html#402-414\">source</a><a href=\"#method.channels_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"image/traits/trait.Pixel.html#tymethod.channels_mut\" class=\"fn\">channels_mut</a>(&amp;mut self) -&gt; &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.slice.html\">[T]</a></h4></section></summary><div class='docblock'>Returns the components as a mutable slice</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.COLOR_MODEL\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/image/color.rs.html#402-414\">source</a><a href=\"#associatedconstant.COLOR_MODEL\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"image/traits/trait.Pixel.html#associatedconstant.COLOR_MODEL\" class=\"constant\">COLOR_MODEL</a>: &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.str.html\">str</a> = &quot;RGB&quot;</h4></section></summary><div class='docblock'>A string that can help to interpret the meaning each channel\nSee <a href=\"http://gegl.org/babl/\">gimp babl</a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.channels4\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/image/color.rs.html#402-414\">source</a><a href=\"#method.channels4\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"image/traits/trait.Pixel.html#tymethod.channels4\" class=\"fn\">channels4</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(T, T, T, T)</a></h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated since 0.24.0: Use <code>channels()</code> or <code>channels_mut()</code></span></div></span><div class='docblock'>Returns the channels of this pixel as a 4 tuple. If the pixel\nhas less than 4 channels the remainder is filled with the maximum value</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_channels\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/image/color.rs.html#402-414\">source</a><a href=\"#method.from_channels\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"image/traits/trait.Pixel.html#tymethod.from_channels\" class=\"fn\">from_channels</a>(a: T, b: T, c: T, d: T) -&gt; <a class=\"struct\" href=\"image/color/struct.Rgb.html\" title=\"struct image::color::Rgb\">Rgb</a>&lt;T&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated since 0.24.0: Use the constructor of the pixel, for example <code>Rgba([r,g,b,a])</code> or <code>Pixel::from_slice</code></span></div></span><div class='docblock'>Construct a pixel from the 4 channels a, b, c and d.\nIf the pixel does not contain 4 channels the extra are ignored.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_slice\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/image/color.rs.html#402-414\">source</a><a href=\"#method.from_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"image/traits/trait.Pixel.html#tymethod.from_slice\" class=\"fn\">from_slice</a>(slice: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.slice.html\">[T]</a>) -&gt; &amp;<a class=\"struct\" href=\"image/color/struct.Rgb.html\" title=\"struct image::color::Rgb\">Rgb</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Returns a view into a slice. <a href=\"image/traits/trait.Pixel.html#tymethod.from_slice\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_slice_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/image/color.rs.html#402-414\">source</a><a href=\"#method.from_slice_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"image/traits/trait.Pixel.html#tymethod.from_slice_mut\" class=\"fn\">from_slice_mut</a>(slice: &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.slice.html\">[T]</a>) -&gt; &amp;mut <a class=\"struct\" href=\"image/color/struct.Rgb.html\" title=\"struct image::color::Rgb\">Rgb</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Returns mutable view into a mutable slice. <a href=\"image/traits/trait.Pixel.html#tymethod.from_slice_mut\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_rgb\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/image/color.rs.html#402-414\">source</a><a href=\"#method.to_rgb\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"image/traits/trait.Pixel.html#tymethod.to_rgb\" class=\"fn\">to_rgb</a>(&amp;self) -&gt; <a class=\"struct\" href=\"image/color/struct.Rgb.html\" title=\"struct image::color::Rgb\">Rgb</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Convert this pixel to RGB</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_rgba\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/image/color.rs.html#402-414\">source</a><a href=\"#method.to_rgba\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"image/traits/trait.Pixel.html#tymethod.to_rgba\" class=\"fn\">to_rgba</a>(&amp;self) -&gt; <a class=\"struct\" href=\"image/color/struct.Rgba.html\" title=\"struct image::color::Rgba\">Rgba</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Convert this pixel to RGB with an alpha channel</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_luma\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/image/color.rs.html#402-414\">source</a><a href=\"#method.to_luma\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"image/traits/trait.Pixel.html#tymethod.to_luma\" class=\"fn\">to_luma</a>(&amp;self) -&gt; <a class=\"struct\" href=\"image/color/struct.Luma.html\" title=\"struct image::color::Luma\">Luma</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Convert this pixel to luma</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_luma_alpha\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/image/color.rs.html#402-414\">source</a><a href=\"#method.to_luma_alpha\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"image/traits/trait.Pixel.html#tymethod.to_luma_alpha\" class=\"fn\">to_luma_alpha</a>(&amp;self) -&gt; <a class=\"struct\" href=\"image/color/struct.LumaA.html\" title=\"struct image::color::LumaA\">LumaA</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Convert this pixel to luma with an alpha channel</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.map\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/image/color.rs.html#402-414\">source</a><a href=\"#method.map\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"image/traits/trait.Pixel.html#tymethod.map\" class=\"fn\">map</a>&lt;F&gt;(&amp;self, f: F) -&gt; <a class=\"struct\" href=\"image/color/struct.Rgb.html\" title=\"struct image::color::Rgb\">Rgb</a>&lt;T&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(T) -&gt; T,</div></h4></section></summary><div class='docblock'>Apply the function <code>f</code> to each channel of this pixel.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.apply\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/image/color.rs.html#402-414\">source</a><a href=\"#method.apply\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"image/traits/trait.Pixel.html#tymethod.apply\" class=\"fn\">apply</a>&lt;F&gt;(&amp;mut self, f: F)<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(T) -&gt; T,</div></h4></section></summary><div class='docblock'>Apply the function <code>f</code> to each channel of this pixel.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.map_with_alpha\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/image/color.rs.html#402-414\">source</a><a href=\"#method.map_with_alpha\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"image/traits/trait.Pixel.html#tymethod.map_with_alpha\" class=\"fn\">map_with_alpha</a>&lt;F, G&gt;(&amp;self, f: F, g: G) -&gt; <a class=\"struct\" href=\"image/color/struct.Rgb.html\" title=\"struct image::color::Rgb\">Rgb</a>&lt;T&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(T) -&gt; T,\n    G: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(T) -&gt; T,</div></h4></section></summary><div class='docblock'>Apply the function <code>f</code> to each channel except the alpha channel.\nApply the function <code>g</code> to the alpha channel.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.apply_with_alpha\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/image/color.rs.html#402-414\">source</a><a href=\"#method.apply_with_alpha\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"image/traits/trait.Pixel.html#tymethod.apply_with_alpha\" class=\"fn\">apply_with_alpha</a>&lt;F, G&gt;(&amp;mut self, f: F, g: G)<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(T) -&gt; T,\n    G: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(T) -&gt; T,</div></h4></section></summary><div class='docblock'>Apply the function <code>f</code> to each channel except the alpha channel.\nApply the function <code>g</code> to the alpha channel. Works in-place.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.map2\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/image/color.rs.html#402-414\">source</a><a href=\"#method.map2\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"image/traits/trait.Pixel.html#tymethod.map2\" class=\"fn\">map2</a>&lt;F&gt;(&amp;self, other: &amp;<a class=\"struct\" href=\"image/color/struct.Rgb.html\" title=\"struct image::color::Rgb\">Rgb</a>&lt;T&gt;, f: F) -&gt; <a class=\"struct\" href=\"image/color/struct.Rgb.html\" title=\"struct image::color::Rgb\">Rgb</a>&lt;T&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(T, T) -&gt; T,</div></h4></section></summary><div class='docblock'>Apply the function <code>f</code> to each channel of this pixel and\n<code>other</code> pairwise.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.apply2\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/image/color.rs.html#402-414\">source</a><a href=\"#method.apply2\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"image/traits/trait.Pixel.html#tymethod.apply2\" class=\"fn\">apply2</a>&lt;F&gt;(&amp;mut self, other: &amp;<a class=\"struct\" href=\"image/color/struct.Rgb.html\" title=\"struct image::color::Rgb\">Rgb</a>&lt;T&gt;, f: F)<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(T, T) -&gt; T,</div></h4></section></summary><div class='docblock'>Apply the function <code>f</code> to each channel of this pixel and\n<code>other</code> pairwise. Works in-place.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.invert\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/image/color.rs.html#402-414\">source</a><a href=\"#method.invert\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"image/traits/trait.Pixel.html#tymethod.invert\" class=\"fn\">invert</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Invert this pixel</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.blend\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/image/color.rs.html#402-414\">source</a><a href=\"#method.blend\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"image/traits/trait.Pixel.html#tymethod.blend\" class=\"fn\">blend</a>(&amp;mut self, other: &amp;<a class=\"struct\" href=\"image/color/struct.Rgb.html\" title=\"struct image::color::Rgb\">Rgb</a>&lt;T&gt;)</h4></section></summary><div class='docblock'>Blend the color of a given pixel into ourself, taking into account alpha channels</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.map_without_alpha\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/image/traits.rs.html#329-331\">source</a><a href=\"#method.map_without_alpha\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"image/traits/trait.Pixel.html#method.map_without_alpha\" class=\"fn\">map_without_alpha</a>&lt;F&gt;(&amp;self, f: F) -&gt; Self<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"image/traits/trait.Pixel.html#associatedtype.Subpixel\" title=\"type image::traits::Pixel::Subpixel\">Subpixel</a>) -&gt; Self::<a class=\"associatedtype\" href=\"image/traits/trait.Pixel.html#associatedtype.Subpixel\" title=\"type image::traits::Pixel::Subpixel\">Subpixel</a>,</div></h4></section></summary><div class='docblock'>Apply the function <code>f</code> to each channel except the alpha channel.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.apply_without_alpha\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/image/traits.rs.html#340-342\">source</a><a href=\"#method.apply_without_alpha\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"image/traits/trait.Pixel.html#method.apply_without_alpha\" class=\"fn\">apply_without_alpha</a>&lt;F&gt;(&amp;mut self, f: F)<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"image/traits/trait.Pixel.html#associatedtype.Subpixel\" title=\"type image::traits::Pixel::Subpixel\">Subpixel</a>) -&gt; Self::<a class=\"associatedtype\" href=\"image/traits/trait.Pixel.html#associatedtype.Subpixel\" title=\"type image::traits::Pixel::Subpixel\">Subpixel</a>,</div></h4></section></summary><div class='docblock'>Apply the function <code>f</code> to each channel except the alpha channel.\nWorks in place.</div></details></div></details>","Pixel","grid_forge::vis::DefaultVisPixel"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PixelWithColorType-for-Rgb%3Cu8%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/image/traits.rs.html#182\">source</a><a href=\"#impl-PixelWithColorType-for-Rgb%3Cu8%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"image/traits/trait.PixelWithColorType.html\" title=\"trait image::traits::PixelWithColorType\">PixelWithColorType</a> for <a class=\"struct\" href=\"image/color/struct.Rgb.html\" title=\"struct image::color::Rgb\">Rgb</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.COLOR_TYPE\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/image/traits.rs.html#183\">source</a><a href=\"#associatedconstant.COLOR_TYPE\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"image/traits/trait.PixelWithColorType.html#associatedconstant.COLOR_TYPE\" class=\"constant\">COLOR_TYPE</a>: <a class=\"enum\" href=\"image/color/enum.ExtendedColorType.html\" title=\"enum image::color::ExtendedColorType\">ExtendedColorType</a> = ExtendedColorType::Rgb8</h4></section></summary><div class='docblock'>This pixel has the format of one of the predefined <code>ColorType</code>s,\nsuch as <code>Rgb8</code>, <code>La16</code> or <code>Rgba32F</code>.\nThis is needed for automatically detecting\na color format when saving an image as a file.</div></details></div></details>","PixelWithColorType","grid_forge::vis::DefaultVisPixel"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PixelWithDefault-for-Rgb%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/grid_forge/vis/mod.rs.html#115-123\">source</a><a href=\"#impl-PixelWithDefault-for-Rgb%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"grid_forge/vis/trait.PixelWithDefault.html\" title=\"trait grid_forge::vis::PixelWithDefault\">PixelWithDefault</a> for <a class=\"struct\" href=\"image/color/struct.Rgb.html\" title=\"struct image::color::Rgb\">Rgb</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"image/traits/trait.Primitive.html\" title=\"trait image::traits::Primitive\">Primitive</a>,\n    Self: <a class=\"trait\" href=\"image/traits/trait.Pixel.html\" title=\"trait image::traits::Pixel\">Pixel</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.pix_default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/grid_forge/vis/mod.rs.html#120-122\">source</a><a href=\"#method.pix_default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"grid_forge/vis/trait.PixelWithDefault.html#tymethod.pix_default\" class=\"fn\">pix_default</a>() -&gt; Self</h4></section></div></details>","PixelWithDefault","grid_forge::vis::DefaultVisPixel"],["<section id=\"impl-Copy-for-Rgb%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/image/color.rs.html#402-414\">source</a><a href=\"#impl-Copy-for-Rgb%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"struct\" href=\"image/color/struct.Rgb.html\" title=\"struct image::color::Rgb\">Rgb</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h3></section>","Copy","grid_forge::vis::DefaultVisPixel"],["<section id=\"impl-Eq-for-Rgb%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/image/color.rs.html#402-414\">source</a><a href=\"#impl-Eq-for-Rgb%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"image/color/struct.Rgb.html\" title=\"struct image::color::Rgb\">Rgb</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,</div></h3></section>","Eq","grid_forge::vis::DefaultVisPixel"],["<section id=\"impl-StructuralPartialEq-for-Rgb%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/image/color.rs.html#402-414\">source</a><a href=\"#impl-StructuralPartialEq-for-Rgb%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"struct\" href=\"image/color/struct.Rgb.html\" title=\"struct image::color::Rgb\">Rgb</a>&lt;T&gt;</h3></section>","StructuralPartialEq","grid_forge::vis::DefaultVisPixel"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()